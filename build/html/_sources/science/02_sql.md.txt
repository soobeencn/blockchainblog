## 数据库真题

### SQL慢查询的解决思路

#### 慢SQL的系统表现

* 1.数据库CPU负载高。一般是查询语句中有很多计算逻辑，导致数据库cpu负载。

* 2.IO负载高导致服务器卡住。这个一般和全表查询没索引有关系。

* 3.查询语句正常，索引正常但是还是慢。如果表面上索引正常，但是查询慢，需要看看是否索引没有生效。

#### 开启SQL慢查询的日志

##### 在 MySQL 的配置文件 my.cnf 的 [mysqld] 项下配置慢查询日志开启
    - [mysqld]slow_query_log=1
    - slow_query_log_file=/var/log/mysql/log-slow-queries.log
    - long_query_time=2
#### 总结

1. 打开慢日志查询，确定是否有SQL语句占用了过多资源，如果是，在不改变业务原意的前提下，对insert、group by、order by、join等语句进行优化。
2. 考虑调整MySQL的系统参数： innodb_buffer_pool_size、innodb_log_file_size、table_cache等。
3. 确定是否是因为高并发引起行锁的超时问题。
4. 如果数据量过大，需要考虑进一步的分库分表

### 事务的隔离级别

#### 数据库必须具备的四个特性

* 1.原子性：事务包含的所有操作要么全部成功，要么全部失败回滚;成功必须要完全应用到数据库，失败则不能对数据库产生影响；

* 2.一致性：事务执行前和执行后必须处于一致性状态;

  例：用户A和用户B的前加起来一共是5000; 无论AB用户之间是如何相互转换的，事务结束后两个用户的钱加起来还是5000,这就是事务的一致性。
 
* 3.隔离性：当多个用户并发访问数据库时，数据库为每一个用户开启的事务，不被其他事务的操作所干扰，多个并发事务之间要相互隔离；

* 4.持久性：一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便在数据库系统遇到故障的情况下也不会丢失事物的操作。

#### 隔离性：当多个线程都开启事务来操作数据库中的数据时，数据库系统要进行隔离操作，以保证各个线程获取数据的准确性。 不考虑事务的隔离性，会产生的几种问题：

* 1.脏读

是指一个事务处理过程里读取了另一个未提交的事务中的数据，然后使用了这个数据；
例：用户A向用户B转账100元，A通知B查看账户，B发现前确实已到账，而之后无论第二条SQL是否执行，只要该事务部提交，则所有操作都将回滚，当B再次查看账户时就会发现前其实并没有到账。

* 2.不可重复读

不可重复读是指在一个事务内，多次读取同一个数据，在这个事务还没有结束 ，另一个事务也访问该同一数据，但是由于第二个事务的修改，那么第一个事务两次读取的数据可能不一样，因此称为不可重复读；即同一个事务中原始数据读取不可重复。 注：不可重复读和脏读的区别，脏读是某一个事务读取另一个事务未提交的脏数据; 不可重复读则是读取前一事务提

* 3.幻读

当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行修改，这种数据涉及到表中的全部数据行，同时，第二个事务也对这个表数据进行修改，这个修改是对表中新增/删除一条数据，那么操作第一个事务的用户发现表中的数据还没有修改的数据行，就好像发生了幻觉一样，这就是发生了幻读。
注:幻读和不可重复读都读取另一条已经提交的事务，所不同的是不可重复读查询的都是同一数据项，而幻读针对的是一批数据整体。

 
#### 数据库提供的四种隔离级别：

* 1.Read uncommitted(读未提交)：最低级别，任何情况都会发生。
* 2.Read Committed(读已提交)：可避免脏读的发生。
* 3.Repeatable read(可重复读)：可避免脏读、不可重复读的发生。
* 4.Serializable(串行化)：避免脏读、不可重复读，幻读的发生。
 

#### 注意： 

四种隔离级别最高：Seralizable级别，最低的是Read uncommitted级别; 级别越高，执行效率就越低; 隔离级别的设置只对当前链接有效，对JDBC操作数据库来说，一个Connection对象相当于一个链接，只对该Connection对象设置的隔离级别只对该connection对象有效，与其它链接connection对象无关。


* 1.Mysql的默认隔离级别是：可重复读：Repeatable read;

* 2.oracle数据库中，只支持seralizable(串行化)级别和Read committed(); 默认的是Read committed级别；








